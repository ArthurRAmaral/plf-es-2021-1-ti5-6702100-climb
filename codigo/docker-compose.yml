version: '3.5'

services:
  node:
    container_name: climb_node
    build: ./backend/node
    environment:
      - DATABASE_HOST=${DATABASE_HOST:-database}
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - AMQP_HOST=${AMQP_HOST:-rabbitmq}
      - AMQP_PORT=${AMQP_PORT:-5672}
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3333}
    ports:
      - '${PORT:-3333}:${PORT:-3333}'
    volumes:
      - ./backend/node:/home/node/app
    depends_on:
      - database
      - redis
      - rabbitmq

  database:
    container_name: climb_node_database
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_DB=${DATABASE_NAME:-database}
      - POSTGRES_USER=${DATABASE_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-postgres}
      - PGPORT=${DATABASE_PORT:-5432}
    ports:
      - '${DATABASE_PORT:-5432}:${DATABASE_PORT:-5432}'
    volumes:
      - data:/var/lib/postgresql/data

  redis:
    image: redis

  rabbitmq:
    image: rabbitmq:3.8.14-management-alpine
    ports:
      - 15672:15672

  apps_deployer:
    build: ./backend/golang/apps_deployer
    volumes:
      - ./backend/golang/apps_deployer/src:/go/src/app
    ports:
      - 8080:80
    environment:
      - HOST=${HOST:-localhost}
      - DOCKER_ADDRESS=${DOCKER_ADDRESS:-localhost}
      - DOCKER_PORT=${DOCKER_PORT:-2375}
      - REGISTRY_ADDRESS=${REGISTRY_ADDRESS:-localhost}
      - REGISTRY_PORT=${REGISTRY_PORT:-5000}
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
    depends_on:
      - rabbitmq

  front_end:
    build: ./frontend
    volumes:
      - ./frontend:/home/node/app
    ports:
      - 3000:3000

volumes:
  data:

networks:
  default:
    name: climb
